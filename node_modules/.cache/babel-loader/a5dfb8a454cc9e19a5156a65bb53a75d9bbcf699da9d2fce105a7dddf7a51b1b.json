{"ast":null,"code":"var _jsxFileName = \"/Users/sadegh/Desktop/trying/src/App.jsx\";\nimport \"./App.css\";\nimport React, { useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: \"\",\n      password: \"\",\n      correctness: false\n    };\n    this.passwordHandler = event => {\n      this.setState({\n        password: event.target.value\n      });\n      if (this.state.password.length >= 8) {\n        this.setState({\n          correctness: true\n        });\n      } else {\n        this.setState({\n          correctness: false\n        });\n      }\n    };\n  }\n  render() {\n    const textColor = {\n      color: this.state.color\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.changeColor,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Username: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: event => {\n            this.setState({\n              name: event.target.value\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), !this.state.correctness ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          style: {\n            border: \"2px solid red\"\n          },\n          onChange: e => this.passwordHandler(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: textColor,\n        children: this.state.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","useState","useFormik","jsxDEV","_jsxDEV","App","Component","constructor","args","state","name","password","correctness","passwordHandler","event","setState","target","value","length","render","textColor","color","className","children","onSubmit","changeColor","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","style","border","e"],"sources":["/Users/sadegh/Desktop/trying/src/App.jsx"],"sourcesContent":["import \"./App.css\";\nimport React, { useState } from \"react\";\nimport { useFormik } from \"formik\";\n\nclass App extends React.Component {\n  state = {\n    name: \"\",\n    password: \"\",\n    correctness: false,\n  };\n\n  passwordHandler = (event) => {\n    this.setState({ password: event.target.value });\n    if (this.state.password.length >= 8) {\n      this.setState({ correctness: true });\n    } else {\n      this.setState({ correctness: false });\n    }\n  };\n\n  render() {\n    const textColor = {\n      color: this.state.color,\n    };\n    return (\n      <div className=\"App\">\n        <form onSubmit={this.changeColor}>\n          <label>Sign Up</label>\n          <br></br>\n          <p>Username: </p>\n          <br></br>\n          <input\n            type=\"text\"\n            onChange={(event) => {\n              this.setState({ name: event.target.value });\n            }}\n          />\n          <br></br>\n          {!this.state.correctness ? (\n            <input type=\"password\" style={{ border: \"2px solid red\" }} onChange={(e) => this.passwordHandler(e)}/>\n          ) : (\n            <input type=\"password\" />\n          )}\n          <br></br>\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n        <p>{this.state.password}</p>\n        <p style={textColor}>{this.state.name}</p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}