{"ast":null,"code":"var _jsxFileName = \"/Users/sadegh/Desktop/Projects/project-one/functional/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { Component, useState } from \"react\";\nimport ToDo from \"./components/ToDo/ToDo\";\nimport Completed from \"./components/Completed/Completed\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet lastGeneratedKey = 0;\nexport default function App() {\n  _s();\n  const [reminders, setReminders] = useState([]);\n  const [allReminders, setAllReminders] = useState([]);\n  const [completedReminders, setCompletedReminders] = useState([]);\n  const [uncompletedReminders, setUncompletedReminders] = useState([]);\n  const [Status, setStatus] = useState({\n    all: true,\n    completed: false,\n    uncompleted: false\n  });\n  const [newReminder, setNewReminder] = useState(\"\");\n  const showingReminders = () => {\n    let arr = [];\n    console.log(\"arr => \", arr);\n    if (Status.all) {\n      arr = allReminders;\n    } else if (Status.completed) {\n      arr = completedReminders;\n    } else if (Status.uncompleted) {\n      arr = uncompletedReminders;\n    }\n    setReminders(arr);\n  };\n  const changeNewReminderContent = event => {\n    setNewReminder(event.target.value);\n  };\n  const addNewReminder = () => {\n    const newRemind = {\n      status: \"uncompleted\",\n      task: newReminder,\n      ID: lastGeneratedKey++\n    };\n    allReminders.unshift(newRemind);\n    uncompletedReminders.unshift(newRemind);\n    setNewReminder(\"\");\n    showingReminders();\n  };\n  const markReminderAsCompleted = reminderIndex => {\n    allReminders[reminderIndex].status = \"completed\";\n    let CompletedReminders = allReminders.filter(reminder => reminder.status === \"completed\");\n    let UncompletedReminders = allReminders.filter(reminder => reminder.status === \"uncompleted\");\n    setCompletedReminders(CompletedReminders);\n    setUncompletedReminders(UncompletedReminders);\n    showingReminders();\n  };\n  const showAllReminders = () => {\n    setStatus({\n      all: true,\n      completed: false,\n      uncompleted: false\n    });\n    showingReminders();\n  };\n  const showCompletedReminders = () => {\n    setStatus({\n      all: false,\n      completed: true,\n      uncompleted: false\n    });\n    showingReminders();\n  };\n  const showUncompletedReminders = () => {\n    setStatus({\n      all: false,\n      completed: false,\n      uncompleted: true\n    });\n    showingReminders();\n  };\n  const removeElement = (allReminderIndex, completedRemindersIndex) => {\n    let all = allReminders;\n    let completed = completedReminders;\n    all.splice(allReminderIndex, 1);\n    completed.splice(completedRemindersIndex, 1);\n    setAllReminders(all);\n    setCompletedReminders(completed);\n    showingReminders();\n  };\n  let mainStyle = {\n    height: \"240px\"\n  };\n  if (reminders.length >= 1) {\n    mainStyle = {\n      height: 240 + 21.5 * reminders.length\n    };\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    style: mainStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"Task\",\n      onChange: changeNewReminderContent,\n      value: newReminder,\n      placeholder: \"Enter Your New Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"addButton\",\n      type: \"button\",\n      onClick: addNewReminder,\n      value: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), reminders.map(item => item.status === \"completed\" ? /*#__PURE__*/_jsxDEV(Completed, {\n      task: item.task,\n      click: () => removeElement(allReminders.indexOf(item), completedReminders.indexOf(item))\n    }, item.ID, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(ToDo, {\n      task: item.task,\n      click: () => setTimeout(() => markReminderAsCompleted(allReminders.indexOf(item)), 500)\n    }, item.ID, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"all\",\n      onClick: showAllReminders,\n      children: \"All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"all\",\n      onClick: showCompletedReminders,\n      children: \"Completed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"all\",\n      onClick: showUncompletedReminders,\n      children: \"Uncompleted\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XWqd9RGRH46kac032v250JhJRys=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Component","useState","ToDo","Completed","jsxDEV","_jsxDEV","lastGeneratedKey","App","_s","reminders","setReminders","allReminders","setAllReminders","completedReminders","setCompletedReminders","uncompletedReminders","setUncompletedReminders","Status","setStatus","all","completed","uncompleted","newReminder","setNewReminder","showingReminders","arr","console","log","changeNewReminderContent","event","target","value","addNewReminder","newRemind","status","task","ID","unshift","markReminderAsCompleted","reminderIndex","CompletedReminders","filter","reminder","UncompletedReminders","showAllReminders","showCompletedReminders","showUncompletedReminders","removeElement","allReminderIndex","completedRemindersIndex","splice","mainStyle","height","length","className","style","children","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","item","click","indexOf","setTimeout","_c","$RefreshReg$"],"sources":["/Users/sadegh/Desktop/Projects/project-one/functional/src/App.jsx"],"sourcesContent":["import React, { Component, useState } from \"react\";\nimport ToDo from \"./components/ToDo/ToDo\";\nimport Completed from \"./components/Completed/Completed\";\nimport \"./App.css\";\n\nlet lastGeneratedKey = 0;\n\nexport default function App() {\n  const [reminders, setReminders] = useState([]);\n  const [allReminders, setAllReminders] = useState([]);\n  const [completedReminders, setCompletedReminders] = useState([]);\n  const [uncompletedReminders, setUncompletedReminders] = useState([]);\n  const [Status, setStatus] = useState({\n    all: true,\n    completed: false,\n    uncompleted: false,\n  });\n  const [newReminder, setNewReminder] = useState(\"\");\n\n  const showingReminders = () => {\n    let arr = [];\n    console.log(\"arr => \",arr)\n    if (Status.all) {\n      arr = allReminders;\n    } else if (Status.completed) {\n      arr = completedReminders;\n    } else if (Status.uncompleted) {\n      arr = uncompletedReminders;\n    }\n    setReminders(arr);\n  };\n\n  const changeNewReminderContent = (event) => {\n    setNewReminder(event.target.value);\n  };\n\n  const addNewReminder = () => {\n    const newRemind = {\n      status: \"uncompleted\",\n      task: newReminder,\n      ID: lastGeneratedKey++,\n    };\n    allReminders.unshift(newRemind);\n    uncompletedReminders.unshift(newRemind);\n    setNewReminder(\"\");\n    showingReminders();\n  };\n\n  const markReminderAsCompleted = (reminderIndex) => {\n    allReminders[reminderIndex].status = \"completed\";\n    let CompletedReminders = allReminders.filter(\n      (reminder) => reminder.status === \"completed\"\n    );\n    let UncompletedReminders = allReminders.filter(\n      (reminder) => reminder.status === \"uncompleted\"\n    );\n    setCompletedReminders(CompletedReminders);\n    setUncompletedReminders(UncompletedReminders);\n    showingReminders();\n  };\n\n  const showAllReminders = () => {\n    setStatus({ all: true, completed: false, uncompleted: false });\n    showingReminders();\n  };\n\n  const showCompletedReminders = () => {\n    setStatus({ all: false, completed: true, uncompleted: false });\n    showingReminders();\n  };\n\n  const showUncompletedReminders = () => {\n    setStatus({ all: false, completed: false, uncompleted: true });\n    showingReminders();\n  };\n\n  const removeElement = (allReminderIndex, completedRemindersIndex) => {\n    let all = allReminders;\n    let completed = completedReminders;\n    all.splice(allReminderIndex, 1);\n    completed.splice(completedRemindersIndex, 1);\n    setAllReminders(all);\n    setCompletedReminders(completed);\n    showingReminders();\n  };\n\n  let mainStyle = {\n    height: \"240px\",\n  };\n\n  if (reminders.length >= 1) {\n    mainStyle = {\n      height: 240 + 21.5 * reminders.length,\n    };\n  }\n\n  return (\n    <div className=\"main\" style={mainStyle}>\n      <input\n        type=\"text\"\n        className=\"Task\"\n        onChange={changeNewReminderContent}\n        value={newReminder}\n        placeholder=\"Enter Your New Task\"\n      />\n      <input\n        className=\"addButton\"\n        type=\"button\"\n        onClick={addNewReminder}\n        value=\"Add\"\n      />\n      {reminders.map((item) =>\n        item.status === \"completed\" ? (\n          <Completed\n            key={item.ID}\n            task={item.task}\n            click={() =>\n              removeElement(\n                allReminders.indexOf(item),\n                completedReminders.indexOf(item)\n              )\n            }\n          />\n        ) : (\n          <ToDo\n            key={item.ID}\n            task={item.task}\n            click={() =>\n              setTimeout(\n                () => markReminderAsCompleted(allReminders.indexOf(item)),\n                500\n              )\n            }\n          />\n        )\n      )}\n\n      <button className=\"all\" onClick={showAllReminders}>\n        All\n      </button>\n      <button className=\"all\" onClick={showCompletedReminders}>\n        Completed\n      </button>\n      <button className=\"all\" onClick={showUncompletedReminders}>\n        Uncompleted\n      </button>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}