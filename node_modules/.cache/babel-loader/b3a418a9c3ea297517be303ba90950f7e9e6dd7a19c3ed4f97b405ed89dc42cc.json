{"ast":null,"code":"var _jsxFileName = \"/Users/sadegh/Desktop/trying/src/App.jsx\";\nimport React, { Component } from \"react\";\nimport ToDo from \"./components/ToDo/ToDo\";\nimport \"./App.css\";\nimport Completed from \"./components/Completed/Completed\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet lastGeneratedKey = 0;\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      reminders: [{\n        status: \"completed\",\n        task: \"nothing\"\n      }],\n      allReminders: [],\n      completedReminders: [],\n      unCompletedReminders: [],\n      all: true,\n      completed: false,\n      uncompleted: false,\n      newReminder: \"\"\n    };\n    this.showingReminders = () => {\n      let arr;\n      if (this.state.all) {\n        arr = this.state.allReminders;\n        this.setState({\n          reminders: arr\n        });\n      }\n      if (this.state.completed) {\n        arr = this.state.completedReminders;\n        this.setState({\n          reminders: arr\n        });\n      }\n      if (this.state.uncompleted) {\n        arr = this.state.unCompletedReminders;\n        this.setState({\n          reminders: arr\n        });\n      }\n    };\n    this.changeNewReminderContent = event => {\n      const changedContent = event.target.value;\n      this.setState({\n        newReminder: changedContent\n      });\n    };\n    this.addNewReminder = () => {\n      const newReminder = {\n        status: \"uncompleted\",\n        task: this.state.newReminder\n      };\n      this.setState(previousState => ({\n        allReminders: [newReminder, ...previousState.allReminders],\n        uncompletedReminders: [newReminder, ...previousState.uncompletedReminders],\n        newReminder: \"\"\n      }), this.showingReminders);\n    };\n    this.removeReminder = reminderIndex => {\n      const reminders = this.state.reminders;\n      reminders[reminderIndex].status = \"completed\";\n      this.setState({\n        reminders: reminders\n      });\n    };\n  }\n  render() {\n    let mainStyle = {\n      height: \"130px\"\n    };\n    if (this.state.reminders.length >= 2) {\n      mainStyle = {\n        height: 160 + 21.5 * (this.state.reminders.length - 1)\n      };\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      style: mainStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"Task\",\n        onChange: e => this.changeNewReminderContent(e),\n        value: this.state.newReminder,\n        placeholder: \"Enter Your New Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"Task\",\n        type: \"button\",\n        onClick: this.addNewReminder,\n        value: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), this.state.reminders.map((item, index) => {\n        if (item.status === \"completed\") {\n          return /*#__PURE__*/_jsxDEV(Completed, {\n            task: item.task\n          }, lastGeneratedKey++, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 20\n          }, this);\n        }\n        return /*#__PURE__*/_jsxDEV(ToDo, {\n          task: item.task,\n          click: () => setTimeout(() => this.removeReminder(index), 700)\n        }, lastGeneratedKey++, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"all\",\n        onClick: this.showAllReminders,\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"completed\",\n        onClick: this.showCompletedReminders,\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"uncompleted\",\n        onClick: this.showUncompletedReminders,\n        children: \"Uncompleted\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","ToDo","Completed","jsxDEV","_jsxDEV","lastGeneratedKey","App","constructor","args","state","reminders","status","task","allReminders","completedReminders","unCompletedReminders","all","completed","uncompleted","newReminder","showingReminders","arr","setState","changeNewReminderContent","event","changedContent","target","value","addNewReminder","previousState","uncompletedReminders","removeReminder","reminderIndex","render","mainStyle","height","length","className","style","children","type","onChange","e","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","item","index","click","setTimeout","showAllReminders","showCompletedReminders","showUncompletedReminders"],"sources":["/Users/sadegh/Desktop/trying/src/App.jsx"],"sourcesContent":["import React, { Component } from \"react\";\nimport ToDo from \"./components/ToDo/ToDo\";\nimport \"./App.css\";\nimport Completed from \"./components/Completed/Completed\";\n\nlet lastGeneratedKey = 0;\n\nexport default class App extends Component {\n  state = {\n    reminders: [{ status: \"completed\", task: \"nothing\" }],\n    allReminders: [],\n    completedReminders: [],\n    unCompletedReminders: [],\n    all: true,\n    completed: false,\n    uncompleted: false,\n    newReminder: \"\",\n  };\n\n  showingReminders = () => {\n    let arr;\n    if (this.state.all) {\n      arr = this.state.allReminders;\n      this.setState({ reminders: arr });\n    }\n    if (this.state.completed) {\n      arr = this.state.completedReminders;\n      this.setState({ reminders: arr });\n    }\n    if (this.state.uncompleted) {\n      arr = this.state.unCompletedReminders;\n      this.setState({ reminders: arr });\n    }\n  };\n\n  changeNewReminderContent = (event) => {\n    const changedContent = event.target.value;\n    this.setState({ newReminder: changedContent });\n  };\n\n  addNewReminder = () => {\n    const newReminder = { status: \"uncompleted\", task: this.state.newReminder };\n    this.setState(\n      (previousState) => ({\n        allReminders: [newReminder, ...previousState.allReminders],\n        uncompletedReminders: [\n          newReminder,\n          ...previousState.uncompletedReminders,\n        ],\n        newReminder: \"\",\n      }),\n      this.showingReminders\n    );\n  };\n\n  removeReminder = (reminderIndex) => {\n    const reminders = this.state.reminders;\n    reminders[reminderIndex].status = \"completed\";\n    this.setState({ reminders: reminders });\n  };\n\n  showAllReminders\n\n  render() {\n    let mainStyle = {\n      height: \"130px\",\n    };\n\n    if (this.state.reminders.length >= 2) {\n      mainStyle = {\n        height: 160 + 21.5 * (this.state.reminders.length - 1),\n      };\n    }\n    return (\n      <div className=\"main\" style={mainStyle}>\n        <input\n          type=\"text\"\n          className=\"Task\"\n          onChange={(e) => this.changeNewReminderContent(e)}\n          value={this.state.newReminder}\n          placeholder=\"Enter Your New Task\"\n        />\n        <input\n          className=\"Task\"\n          type=\"button\"\n          onClick={this.addNewReminder}\n          value=\"Add\"\n        />\n        {this.state.reminders.map((item, index) => {\n          if (item.status === \"completed\") {\n            return <Completed key={lastGeneratedKey++} task={item.task} />;\n          }\n          return (\n            <ToDo\n              task={item.task}\n              click={() => setTimeout(() => this.removeReminder(index), 700)}\n              key={lastGeneratedKey++}\n            />\n          );\n        })}\n        <button className=\"all\" onClick={this.showAllReminders}>All</button>\n        <button className=\"completed\" onClick={this.showCompletedReminders}>Completed</button>\n        <button className=\"uncompleted\" onClick={this.showUncompletedReminders}>Uncompleted</button>\n      </div>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}