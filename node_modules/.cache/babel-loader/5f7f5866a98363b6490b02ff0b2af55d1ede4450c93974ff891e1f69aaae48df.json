{"ast":null,"code":"var _jsxFileName = \"/Users/sadegh/Desktop/trying/src/App.jsx\";\nimport React, { Component } from \"react\";\nimport ToDo from \"./components/ToDo\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      reminders: [],\n      newReminder: \"\"\n    };\n    this.changeNewReminderContent = event => {\n      console.log(this.state.newReminder.length);\n      const changedContent = event.target.value;\n      this.setState({\n        newReminder: changedContent\n      });\n    };\n    this.addNewReminder = () => {\n      const newReminder = this.state.newReminder;\n      this.setState(previousState => ({\n        reminders: [...previousState.reminders, newReminder]\n      }));\n      this.setState({\n        newReminder: \"\"\n      });\n    };\n    this.removeReminder = reminderIndex => {\n      const reminders = this.state.reminders;\n      reminders.splice(reminderIndex, 1);\n      this.setState({\n        reminders: reminders\n      });\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => this.changeNewReminderContent(e),\n        value: this.state.newReminder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.addNewReminder,\n        children: \"Add new Reminder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), this.state.reminders.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(ToDo, {\n          task: item,\n          click: e => this.removeReminder(index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 18\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","ToDo","jsxDEV","_jsxDEV","App","constructor","args","state","reminders","newReminder","changeNewReminderContent","event","console","log","length","changedContent","target","value","setState","addNewReminder","previousState","removeReminder","reminderIndex","splice","render","className","children","type","onChange","e","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","item","index","task","click"],"sources":["/Users/sadegh/Desktop/trying/src/App.jsx"],"sourcesContent":["import React, { Component } from \"react\";\nimport ToDo from \"./components/ToDo\";\nimport \"./App.css\"\n\nexport default class App extends Component {\n  state = {\n    reminders: [],\n    newReminder: \"\",\n  };\n\n  changeNewReminderContent = (event) => {\n    console.log(this.state.newReminder.length);\n    const changedContent = event.target.value;\n    this.setState({ newReminder: changedContent });\n  };\n\n  addNewReminder = () => {\n    const newReminder = this.state.newReminder;\n    this.setState((previousState) => ({\n      reminders: [...previousState.reminders, newReminder],\n    }));\n    this.setState({ newReminder: \"\" });\n  };\n\n  removeReminder = (reminderIndex) => {\n    const reminders = this.state.reminders;\n    reminders.splice(reminderIndex, 1);\n    this.setState({ reminders: reminders });\n  };\n\n  render() {\n    return (\n      <div className=\"main\">\n        <input\n          type=\"text\"\n          onChange={(e) => this.changeNewReminderContent(e)}\n          value={this.state.newReminder}\n        />\n        <button onClick={this.addNewReminder}>Add new Reminder</button>\n        {this.state.reminders.map((item, index) => {\n          return <ToDo task={item} click={(e) => this.removeReminder(index)} />;\n        })}\n      </div>\n    );\n  }\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAO,WAAW;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElB,eAAe,MAAMC,GAAG,SAASJ,SAAS,CAAC;EAAAK,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KACzCC,KAAK,GAAG;MACNC,SAAS,EAAE,EAAE;MACbC,WAAW,EAAE;IACf,CAAC;IAAA,KAEDC,wBAAwB,GAAIC,KAAK,IAAK;MACpCC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACN,KAAK,CAACE,WAAW,CAACK,MAAM,CAAC;MAC1C,MAAMC,cAAc,GAAGJ,KAAK,CAACK,MAAM,CAACC,KAAK;MACzC,IAAI,CAACC,QAAQ,CAAC;QAAET,WAAW,EAAEM;MAAe,CAAC,CAAC;IAChD,CAAC;IAAA,KAEDI,cAAc,GAAG,MAAM;MACrB,MAAMV,WAAW,GAAG,IAAI,CAACF,KAAK,CAACE,WAAW;MAC1C,IAAI,CAACS,QAAQ,CAAEE,aAAa,KAAM;QAChCZ,SAAS,EAAE,CAAC,GAAGY,aAAa,CAACZ,SAAS,EAAEC,WAAW;MACrD,CAAC,CAAC,CAAC;MACH,IAAI,CAACS,QAAQ,CAAC;QAAET,WAAW,EAAE;MAAG,CAAC,CAAC;IACpC,CAAC;IAAA,KAEDY,cAAc,GAAIC,aAAa,IAAK;MAClC,MAAMd,SAAS,GAAG,IAAI,CAACD,KAAK,CAACC,SAAS;MACtCA,SAAS,CAACe,MAAM,CAACD,aAAa,EAAE,CAAC,CAAC;MAClC,IAAI,CAACJ,QAAQ,CAAC;QAAEV,SAAS,EAAEA;MAAU,CAAC,CAAC;IACzC,CAAC;EAAA;EAEDgB,MAAMA,CAAA,EAAG;IACP,oBACErB,OAAA;MAAKsB,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnBvB,OAAA;QACEwB,IAAI,EAAC,MAAM;QACXC,QAAQ,EAAGC,CAAC,IAAK,IAAI,CAACnB,wBAAwB,CAACmB,CAAC,CAAE;QAClDZ,KAAK,EAAE,IAAI,CAACV,KAAK,CAACE;MAAY;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC,eACF9B,OAAA;QAAQ+B,OAAO,EAAE,IAAI,CAACf,cAAe;QAAAO,QAAA,EAAC;MAAgB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAC9D,IAAI,CAAC1B,KAAK,CAACC,SAAS,CAAC2B,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;QACzC,oBAAOlC,OAAA,CAACF,IAAI;UAACqC,IAAI,EAAEF,IAAK;UAACG,KAAK,EAAGV,CAAC,IAAK,IAAI,CAACR,cAAc,CAACgB,KAAK;QAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACvE,CAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEV;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}